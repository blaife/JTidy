/**
 * @Description: 桥接模式
 *
 * 将抽象与实现分离，使它们可以独立变化。它是用组合关系代替继承关系来实现，从而降低了抽象和实现这两个可变维度的耦合度
 *
 * 优点：
 *  1）抽象与实现分离，扩展能力强
 *  2）符合开闭原则
 *  3）符合合成复用原则
 *  4）其实现细节对客户透明
 *
 * 缺点：
 *  由于聚合关系建立在抽象层，要求开发者针对抽象化进行设计与编程，能正确地识别出系统中两个独立变化的维度，这增加了系统的理解与设计难度
 *
 * 结构：
 *  抽象化（Abstraction）角色：定义抽象类，并包含一个对实现化对象的引用。
 *  扩展抽象化（Refined Abstraction）角色：是抽象化角色的子类，实现父类中的业务方法，并通过组合关系调用实现化角色中的业务方法。
 *  实现化（Implementor）角色：定义实现化角色的接口，供扩展抽象化角色调用。
 *  具体实现化（Concrete Implementor）角色：给出实现化角色接口的具体实现。
 *
 * @Author: magd39318
 * @Date: 2021/8/30 17:10
 */
package study.blaife.designmode.structural.bridge;